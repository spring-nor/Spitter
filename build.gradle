repositories {
    maven { url 'http://maven.springframework.org/release' }
    maven { url 'http://maven.springframework.org/milestone' }
    maven { url 'http://maven.springframework.org/snapshot' }
//    maven { url 'https://mvnrepository.com/artifact/postgresql/postgresql' }

    mavenCentral()
    jcenter()
}


allprojects {
    group = 'spittr'
    version '1.0-SNAPSHOT'

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'war'

    sourceCompatibility = 1.8

//    task wrapper(type: Wrapper) {
//        gradleVersion = '2.1'
//    }
}

war {
    baseName = 'spittr'
//    archiveName "spittr.war"
}

description = 'Gradle Profiles Spitter'

//sourceSets {
//    // Define new source set
//    // with the name api. This
//    // source set contains interfaces,
//    // implementation classes are in
//    // the main source set.
//    prod {
//        // not necessary but nice for IDEa's
//
//        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.testRuntime
//        runtimeClasspath = output + sourceSets.main.output + sourceSets.test.output + configurations.testRuntime
//
//        java.srcDirs = ["src/prod/java"]
//        resources.srcDirs = ["src/prod/resources"]
//
////        compileClasspath += sourceSets.prod.runtimeClasspath
////        // somehow this redeclaration is needed, but should be irrelevant
////        // since runtimeClasspath always expands compileClasspath
////        runtimeClasspath += sourceSets.prod.runtimeClasspath
//    }
//}




dependencies {
    configurations.all {
//        exclude group: "commons-logging", module: "commons-logging"
//        exclude group: "org.slf4j", module: "jcl-over-slf4j"
    }
    compile group: 'org.jboss.logging', name: 'jboss-logging', version: '3.3.1.Final'

    compile(group: 'org.hibernate', name: 'hibernate-core', version: '5.2.1.Final')
            {
                exclude group: 'org.jboss.logging', module: 'jboss-logging'
            }

    compile (group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.2.1.Final')
            {
                exclude group: 'org.jboss.logging', module: 'jboss-logging'
            }

    compile(group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.0.Alpha1')
            {
                exclude group: 'org.jboss.logging', module: 'jboss-logging'
            }


    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'

    compile group: 'org.postgresql', name: 'postgresql', version: '42.0.0'
//    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'



    compile(group: 'org.springframework', name: 'spring-orm', version: '5.0.0.M3')

    compile "org.springframework:spring-webmvc:5.0.0.M3"
//    compile "org.springframework:spring-jdbc:5.0.0.M3"

    compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.2.2.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.2.2.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: '4.2.2.RELEASE'




    compile(group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '2.1.2.RELEASE')
//            {
//                exclude group: 'org.slf4j', module: 'slf4j-api'
//            }

    compile(group: 'org.apache.tiles', name: 'tiles-jsp', version: '3.0.7')
//            {
//                exclude group: 'org.slf4j', module: 'slf4j-api'
//            }

    compile(group: 'org.apache.tiles', name: 'tiles-extras', version: '3.0.7')
//            {
//                exclude group: 'org.slf4j', module: 'slf4j-api'
//            }

    compile(group: 'org.apache.tiles', name: 'tiles-servlet', version: '3.0.7')
//            {
//                exclude group: 'org.slf4j', module: 'slf4j-api'
//            }

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'



    compile "org.apache.commons:commons-lang3:$commonsLangVersion"

    // The production code uses the SLF4J logging API at compile time
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8'

//    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.2'




    compile "javax.servlet:jstl:$jstlVersion"

    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
//    providedCompile "javax.servlet.jsp:jsp-api:$jspApiVersion
    compile group: 'junit', name: 'junit', version: '4.12'

    providedCompile "javax.el:javax.el-api:$jspElVersion"

    testCompile "junit:junit-dep:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile group: 'junit', name: 'junit', version: '4.11'
//    testCompile("org.springframework.security:spring-security-test")



}

//apply from: rootProject.file('gradle/profiles.gradle')

//tasks.create(name: 'hello') {
//    doLast {
//        println "hello ---------"
////        -Dspring.profiles.active=prod
//        System.setProperty("spring.profiles.active", "prod")
//        println System.getProperty("spring.profiles.active")
//
//    }
//}

//sourceSets {
//    integrationTest {
//        // not necessary but nice for IDEa's
//        java
//        resources
//
//        compileClasspath += sourceSets.test.runtimeClasspath
//        // somehow this redeclaration is needed, but should be irrelevant
//        // since runtimeClasspath always expands compileClasspath
//        runtimeClasspath += sourceSets.test.runtimeClasspath
//    }
//}
//
//// define custom test task for running integration tests
//task integrationTest(type: Test) {
//    testClassesDir = sourceSets.integrationTest.output.classesDir
//    classpath = sourceSets.integrationTest.runtimeClasspath
//}
//integrationTest.dependsOn test

//task wrapper(type: Wrapper) {
//    gradleVersion = '2.1'
//}

//sourceSets {
//    // Define new source set
//    // with the name api. This
//    // source set contains interfaces,
//    // implementation classes are in
//    // the main source set.
//    prod {
//        // not necessary but nice for IDEa's
//        java.srcDirs = ["src/prod/java"]
//        resources.srcDirs = ["src/prod/resources"]
//
//        compileClasspath += sourceSets.prod.runtimeClasspath
////        // somehow this redeclaration is needed, but should be irrelevant
////        // since runtimeClasspath always expands compileClasspath
////        runtimeClasspath += sourceSets.prod.runtimeClasspath
//    }
//}

//task prodRun(type: War) {
//    println "----------------Running prodRun task"
//    archiveName "spittr.war"
////    prodClassesDir = sourceSets.prod.output.classesDir
//    sourceSets {
//        prod {
//            java.srcDir file('src/prod/java')
//            resources.srcDirs = ["src/prod/resources"]
//        }
//    }
//    classpath = sourceSets.prod.runtimeClasspath
//
////    if (project.hasProperty('env')) {
////        println "Target environment: $env"
//////        sourceSets.main.resources.srcDir "src/main/environment/$env"
////    }
//    doFirst
//            {
//                classpath = sourceSets.main.runtimeClasspath
//                println springVersion
//                println System.properties['system']
//                println env
//                System.setProperty("spring.profiles.active", "prod")
//            }
//    doLast
//            {
//                println springVersion
//                println System.properties['system']
//                println env
//                System.setProperty("spring.profiles.active", "prod")
//
//            }
//}

//dependencies {
//    prodCompile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '2.1.2.RELEASE'
//    prodCompile(group: 'org.apache.tiles', name: 'tiles-jsp', version: '3.0.7')
//    prodCompile(group: 'org.apache.tiles', name: 'tiles-extras', version: '3.0.7')
//    prodCompile(group: 'org.apache.tiles', name: 'tiles-servlet', version: '3.0.7')
//    prodCompile "org.springframework:spring-webmvc:$springVersion"
//    prodCompile "org.springframework:spring-jdbc:$springVersion"
//    prodCompile "org.apache.commons:commons-lang3:$commonsLangVersion"
//    // The production code uses the SLF4J logging API at compile time
//    prodCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8'
//    prodCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8'
//    prodCompile "javax.servlet:jstl:$jstlVersion"
//    prodCompile group: 'org.hibernate', name: 'hibernate-validator', version: '5.1.3.Final'
//    prodCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
//    prodCompile "javax.servlet.jsp:jsp-api:$jspApiVersion"
//    prodCompile "javax.el:javax.el-api:$jspElVersion"
//}


